(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{229:function(a,s,e){"use strict";e.r(s);var n=e(0),t=Object(n.a)({},(function(){var a=this,s=a.$createElement,e=a._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h2",{attrs:{id:"权重计算"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#权重计算"}},[a._v("#")]),a._v(" 权重计算")]),a._v(" "),e("h3",{attrs:{id:"weight"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#weight"}},[a._v("#")]),a._v(" weight")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("static const int prio_to_weight[40] = {\n /* -20 */     88761,     71755,     56483,     46273,     36291,\n /* -15 */     29154,     23254,     18705,     14949,     11916,\n /* -10 */      9548,      7620,      6100,      4904,      3906,\n /*  -5 */      3121,      2501,      1991,      1586,      1277,\n /*   0 */      1024,       820,       655,       526,       423,\n /*   5 */       335,       272,       215,       172,       137,\n /*  10 */       110,        87,        70,        56,        45,\n /*  15 */        36,        29,        23,        18,        15,\n};\n\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br")])]),e("h3",{attrs:{id:"inverse-weight"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#inverse-weight"}},[a._v("#")]),a._v(" inverse weight")]),a._v(" "),e("p",[a._v("$$inv_weight = \\frac{2^{32}}{weight}$$")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("static const u32 prio_to_wmult[40] = {\n /* -20 */     48388,     59856,     76040,     92818,    118348,\n /* -15 */    147320,    184698,    229616,    287308,    360437,\n /* -10 */    449829,    563644,    704093,    875809,   1099582,\n /*  -5 */   1376151,   1717300,   2157191,   2708050,   3363326,\n /*   0 */   4194304,   5237765,   6557202,   8165337,  10153587,\n /*   5 */  12820798,  15790321,  19976592,  24970740,  31350126,\n /*  10 */  39045157,  49367440,  61356676,  76695844,  95443717,\n /*  15 */ 119304647, 148102320, 186737708, 238609294, 286331153,\n};\n\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br")])]),e("h3",{attrs:{id:"vruntime"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vruntime"}},[a._v("#")]),a._v(" vruntime")]),a._v(" "),e("p",[a._v("$$vruntime = \\frac{delta"),e("em",[a._v("nice_0_weight}{weight}$$\n$$ = \\frac{delta")]),a._v("nice_0_weight * 2^{32}}{weight} >>32$$\n$$ = delta*nice_0_weight * inv_weight >> 32$$")]),a._v(" "),e("h3",{attrs:{id:"runnable-avg-sum"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#runnable-avg-sum"}},[a._v("#")]),a._v(" runnable_avg_sum")]),a._v(" "),e("p",[a._v("调试实体在就绪队列里可运行状态下总的衰减累加时间")]),a._v(" "),e("h3",{attrs:{id:"runnable-avg-period"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#runnable-avg-period"}},[a._v("#")]),a._v(" runnable_avg_period")]),a._v(" "),e("p",[a._v("调试实体在系统中总的衰减累加时间")]),a._v(" "),e("h3",{attrs:{id:"load-avg-contrib"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#load-avg-contrib"}},[a._v("#")]),a._v(" load_avg_contrib")]),a._v(" "),e("p",[a._v("进程平均负载贡献度")]),a._v(" "),e("h3",{attrs:{id:"runnable-avg-yn-inv"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#runnable-avg-yn-inv"}},[a._v("#")]),a._v(" runnable_avg_yN_inv")]),a._v(" "),e("p",[a._v("原本的衰减因子 $$y^n = 0.5^{\\frac{n}{32}}$$\n为了不做浮点运算，使用下面的中间结果。")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("/* Precomputed fixed inverse multiplies for multiplication by y^n */\nstatic const u32 runnable_avg_yN_inv[] = {\n\t0xffffffff, 0xfa83b2da, 0xf5257d14, 0xefe4b99a, 0xeac0c6e6, 0xe5b906e6,\n\t0xe0ccdeeb, 0xdbfbb796, 0xd744fcc9, 0xd2a81d91, 0xce248c14, 0xc9b9bd85,\n\t0xc5672a10, 0xc12c4cc9, 0xbd08a39e, 0xb8fbaf46, 0xb504f333, 0xb123f581,\n\t0xad583ee9, 0xa9a15ab4, 0xa5fed6a9, 0xa2704302, 0x9ef5325f, 0x9b8d39b9,\n\t0x9837f050, 0x94f4efa8, 0x91c3d373, 0x8ea4398a, 0x8b95c1e3, 0x88980e80,\n\t0x85aac367, 0x82cd8698,\n};\n\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br")])]),e("p",[a._v("$$runnable_avg_yN_inv[n] = {(0.5^{\\frac{n}{32}})}*2^{32}$$")]),a._v(" "),e("h3",{attrs:{id:"runnable-avg-yn-sum"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#runnable-avg-yn-sum"}},[a._v("#")]),a._v(" runnable_avg_yN_sum")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("static const u32 runnable_avg_yN_sum[] = {\n\t    0, 1002, 1982, 2941, 3880, 4798, 5697, 6576, 7437, 8279, 9103,\n\t 9909,10698,11470,12226,12966,13690,14398,15091,15769,16433,17082,\n\t17718,18340,18949,19545,20128,20698,21256,21802,22336,22859,23371,\n};\n\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br")])]),e("p",[a._v("$$runnable_avg_yN_sum[n] = 1024*(y^1+y^2+y^3.....+y^n)$$")]),a._v(" "),e("h3",{attrs:{id:"scale-freq"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#scale-freq"}},[a._v("#")]),a._v(" scale_freq")]),a._v(" "),e("p",[a._v("表示 当前freq 相对 本cpu最大freq 的比值\n$$scale_freq = \\frac{cpu_curr_freq }{cpu_max_freq}*1024$$")]),a._v(" "),e("h3",{attrs:{id:"scale-cpu"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#scale-cpu"}},[a._v("#")]),a._v(" scale_cpu")]),a._v(" "),e("p",[a._v("表示 (当前cpu最大运算能力 相对 所有cpu中最大的运算能力 的比值) * (cpufreq_policy的最大频率 相对 本cpu最大频率 的比值)\n$$scale_cpu = \\frac{cpu_scale * max_freq_scale}{1024}$$")]),a._v(" "),e("h3",{attrs:{id:"cpu-scale"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cpu-scale"}},[a._v("#")]),a._v(" cpu_scale")]),a._v(" "),e("p",[a._v("表示 当前cpu最大运算能力 相对 所有cpu中最大的运算能力 的比值.当前cpu的最大运算能力等于当前cpu的最大频率乘以当前cpu每clk的运算能力efficiency，efficiency相当于DMIPS，A53/A73不同架构每个clk的运算能力是不一样的\n$$cpu_scale = (\\frac{cpu_max_freq * efficiency}{max_cpu_perf})* 1024$$")]),a._v(" "),e("h3",{attrs:{id:"max-freq-scale"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#max-freq-scale"}},[a._v("#")]),a._v(" max_freq_scale")]),a._v(" "),e("p",[a._v("表示 cpufreq_policy的最大频率 相对 本cpu最大频率 的比值\n$$max_freq_scale = \\frac{policy->max}{cpuinfo->max_freq} * 1024$$")])])}),[],!1,null,null,null);s.default=t.exports}}]);