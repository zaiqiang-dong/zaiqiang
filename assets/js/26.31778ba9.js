(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{449:function(s,t,a){"use strict";a.r(t);var n=a(27),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"页分配掩码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#页分配掩码"}},[s._v("#")]),s._v(" 页分配掩码")]),s._v(" "),a("hr"),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("软件版本")]),s._v(" "),a("th",[s._v("硬件版本")]),s._v(" "),a("th",[s._v("更新内容")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("linux 4.19")]),s._v(" "),a("td",[s._v("arm64")]),s._v(" "),a("td")])])]),s._v(" "),a("hr"),s._v(" "),a("h2",{attrs:{id:"_1-掩码介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-掩码介绍"}},[s._v("#")]),s._v(" 1. 掩码介绍")]),s._v(" "),a("h3",{attrs:{id:"_1-1-原始掩码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-原始掩码"}},[s._v("#")]),s._v(" 1.1 原始掩码")]),s._v(" "),a("p",[s._v("最原始的一部分flags（前面带三个_）,后面的flags基本都是用这部分“组合”出来的,具体信息如下：")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Plain integer GFP bitmasks. Do not use this directly. */")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n * 分配区域指定 一般占用整个掩码的最低 1~4 BIT\n */")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//从ZONE_DMA区域分配内存")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("___GFP_DMA \t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x01u")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//从ZONE_HIGHMEM活ZONE_NORMAL中分配内存")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("___GFP_HIGHMEM\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x02u")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//从ZONE_DMA32中分配内存")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("___GFP_DMA32\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x04u")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//页是可移动的")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("___GFP_MOVABLE\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x08u")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n * 分配行为指定, 占用掩码的第 5～16 BIT \n */")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//页是可回收的")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("___GFP_RECLAIMABLE\t"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x10u")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//未知")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("___GFP_HIGH\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x20u")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//未知\t\t\t")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("___GFP_IO\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x40u")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//未知")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("___GFP_FS\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x80u")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//需要非缓存的冷页")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("___GFP_COLD\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x100u")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//禁止分配失败警告")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("___GFP_NOWARN\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x200u")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//一直重试直到成功\t\t\t\t")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("___GFP_REPEAT\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x400u")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("___GFP_NOFAIL\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x800u")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//失败返回不重试")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("___GFP_NORETRY\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x1000u")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//使用紧急分配链表")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("___GFP_MEMALLOC\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x2000u")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//未知")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("___GFP_COMP\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x4000u")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//返回的页面初始化为0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("___GFP_ZERO\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x8000u")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n * 分配类型指定， 占用掩码第 17～23 BIT\n */")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//不使用紧急分配链表")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("___GFP_NOMEMALLOC\t"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x10000u")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//只允许在进程允许运行的CPU所关联的PCP分配内存")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("___GFP_HARDWALL\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x20000u")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//未知")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("___GFP_THISNODE\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x40000u")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//用于原子分配，在任何情况下都不能中断")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("___GFP_ATOMIC\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x80000u")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//未知")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("___GFP_NOACCOUNT\t"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x100000u")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//避免被内存检测工具kmemcheck检测")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("___GFP_NOTRACK\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x200000u")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//当内存不足时，直接进入内存回收")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("___GFP_DIRECT_RECLAIM\t"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x400000u")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//未知")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("___GFP_OTHER_NODE\t"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x800000u")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//未知")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("___GFP_WRITE\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x1000000u")])])]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//当内存不足时，唤醒内存回收")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("___GFP_KSWAPD_RECLAIM\t"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x2000000u")])])]),s._v("\n\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br"),a("span",{staticClass:"line-number"},[s._v("66")]),a("br"),a("span",{staticClass:"line-number"},[s._v("67")]),a("br"),a("span",{staticClass:"line-number"},[s._v("68")]),a("br"),a("span",{staticClass:"line-number"},[s._v("69")]),a("br"),a("span",{staticClass:"line-number"},[s._v("70")]),a("br"),a("span",{staticClass:"line-number"},[s._v("71")]),a("br"),a("span",{staticClass:"line-number"},[s._v("72")]),a("br"),a("span",{staticClass:"line-number"},[s._v("73")]),a("br"),a("span",{staticClass:"line-number"},[s._v("74")]),a("br"),a("span",{staticClass:"line-number"},[s._v("75")]),a("br"),a("span",{staticClass:"line-number"},[s._v("76")]),a("br"),a("span",{staticClass:"line-number"},[s._v("77")]),a("br"),a("span",{staticClass:"line-number"},[s._v("78")]),a("br"),a("span",{staticClass:"line-number"},[s._v("79")]),a("br"),a("span",{staticClass:"line-number"},[s._v("80")]),a("br"),a("span",{staticClass:"line-number"},[s._v("81")]),a("br"),a("span",{staticClass:"line-number"},[s._v("82")]),a("br"),a("span",{staticClass:"line-number"},[s._v("83")]),a("br"),a("span",{staticClass:"line-number"},[s._v("84")]),a("br"),a("span",{staticClass:"line-number"},[s._v("85")]),a("br"),a("span",{staticClass:"line-number"},[s._v("86")]),a("br"),a("span",{staticClass:"line-number"},[s._v("87")]),a("br"),a("span",{staticClass:"line-number"},[s._v("88")]),a("br"),a("span",{staticClass:"line-number"},[s._v("89")]),a("br"),a("span",{staticClass:"line-number"},[s._v("90")]),a("br"),a("span",{staticClass:"line-number"},[s._v("91")]),a("br"),a("span",{staticClass:"line-number"},[s._v("92")]),a("br"),a("span",{staticClass:"line-number"},[s._v("93")]),a("br"),a("span",{staticClass:"line-number"},[s._v("94")]),a("br")])]),a("h3",{attrs:{id:"_1-2-掩码组合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-掩码组合"}},[s._v("#")]),s._v(" 1.2 掩码组合")]),s._v(" "),a("p",[s._v("这个部分一分是由第一部分的flags中的一个或者多个组合而成。")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* If the above are modified, __GFP_BITS_SHIFT may need updating */")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n * Physical address zone modifiers (see linux/mmzone.h - low four bits)\n *\n * Do not put any conditional on these. If necessary modify the definitions\n * without the underscores and use them consistently. The definitions here may\n * be used in bit comparisons.\n */")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n * 这个基本和第一部分一样\n * 使用了__force修饰的变量可以进行强制类型转换, 没有使用 __force修饰的变量进行强制类型转换时, Sparse会给出警告.\n */")]),s._v("\n\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//和第一部分基本一样")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("__GFP_DMA")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__force gfp_t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("___GFP_DMA"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("__GFP_HIGHMEM")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__force gfp_t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("___GFP_HIGHMEM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("__GFP_DMA32")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__force gfp_t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("___GFP_DMA32"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//是页迁移机制所需的标志，可移动的")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("__GFP_MOVABLE")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__force gfp_t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("___GFP_MOVABLE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  ")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Page is movable */")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("__GFP_MOVABLE")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__force gfp_t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("___GFP_MOVABLE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  ")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ZONE_MOVABLE allowed */")])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//第一部分的组合")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("GFP_ZONEMASK")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__GFP_DMA"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("__GFP_HIGHMEM"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("__GFP_DMA32"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("__GFP_MOVABLE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n * Page mobility and placement hints\n *\n * These flags provide hints about how mobile the page is. Pages with similar\n * mobility are placed within the same pageblocks to minimise problems due\n * to external fragmentation.\n *\n * __GFP_MOVABLE (also a zone modifier) indicates that the page can be\n *   moved by page migration during memory compaction or can be reclaimed.\n *\n * __GFP_RECLAIMABLE is used for slab allocations that specify\n *   SLAB_RECLAIM_ACCOUNT and whose pages can be freed via shrinkers.\n *\n * __GFP_WRITE indicates the caller intends to dirty the page. Where possible,\n *   these pages will be spread between local zones to avoid all the dirty\n *   pages being in one zone (fair zone allocation policy).\n *\n * __GFP_HARDWALL enforces the cpuset memory allocation policy.\n *\n * __GFP_THISNODE forces the allocation to be satisified from the requested\n *   node with no fallbacks or placement policy enforcements.\n */")]),s._v("\n \n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//是页迁移机制所需的标志，可回收的")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("__GFP_RECLAIMABLE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__force gfp_t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("___GFP_RECLAIMABLE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//未知")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("__GFP_WRITE")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__force gfp_t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("___GFP_WRITE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//未知")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("__GFP_HARDWALL")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__force gfp_t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("___GFP_HARDWALL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//未知")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("__GFP_THISNODE")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__force gfp_t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("___GFP_THISNODE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n * Watermark modifiers -- controls access to emergency reserves\n *\n * __GFP_HIGH indicates that the caller is high-priority and that granting\n *   the request is necessary before the system can make forward progress.\n *   For example, creating an IO context to clean pages.\n *\n * __GFP_ATOMIC indicates that the caller cannot reclaim or sleep and is\n *   high priority. Users are typically interrupt handlers. This may be\n *   used in conjunction with __GFP_HIGH\n *\n * __GFP_MEMALLOC allows access to all memory. This should only be used when\n *   the caller guarantees the allocation will allow more memory to be freed\n *   very shortly e.g. process exiting or swapping. Users either should\n *   be the MM or co-ordinating closely with the VM (e.g. swap over NFS).\n *\n * __GFP_NOMEMALLOC is used to explicitly forbid access to emergency reserves.\n *   This takes precedence over the __GFP_MEMALLOC flag if both are set.\n *\n * __GFP_NOACCOUNT ignores the accounting for kmemcg limit enforcement.\n */")]),s._v("\n\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//中断中分配内存会使用，表明不允许打断")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("__GFP_ATOMIC")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__force gfp_t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("___GFP_ATOMIC"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//高优先级分配内存，")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("__GFP_HIGH")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__force gfp_t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("___GFP_HIGH"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//调用者需要很快释放分配的内存")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("__GFP_MEMALLOC")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__force gfp_t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("___GFP_MEMALLOC"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//禁止从应急的内存空间分配 ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("__GFP_NOMEMALLOC")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__force gfp_t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("___GFP_NOMEMALLOC"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//未知")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("__GFP_NOACCOUNT")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__force gfp_t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("___GFP_NOACCOUNT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n * Reclaim modifiers\n *\n * __GFP_IO can start physical IO.\n *\n * __GFP_FS can call down to the low-level FS. Clearing the flag avoids the\n *   allocator recursing into the filesystem which might already be holding\n *   locks.\n *\n * __GFP_DIRECT_RECLAIM indicates that the caller may enter direct reclaim.\n *   This flag can be cleared to avoid unnecessary delays when a fallback\n *   option is available.\n *\n * __GFP_KSWAPD_RECLAIM indicates that the caller wants to wake kswapd when\n *   the low watermark is reached and have it reclaim pages until the high\n *   watermark is reached. A caller may wish to clear this flag when fallback\n *   options are available and the reclaim is likely to disrupt the system. The\n *   canonical example is THP allocation where a fallback is cheap but\n *   reclaim/compaction may cause indirect stalls.\n *\n * __GFP_RECLAIM is shorthand to allow/forbid both direct and kswapd reclaim.\n *\n * __GFP_REPEAT: Try hard to allocate the memory, but the allocation attempt\n *   _might_ fail.  This depends upon the particular VM implementation.\n *\n * __GFP_NOFAIL: The VM implementation _must_ retry infinitely: the caller\n *   cannot handle allocation failures. New users should be evaluated carefully\n *   (and the flag should be used only when there is no reasonable failure\n *   policy) but it is definitely preferable to use the flag rather than\n *   opencode endless loop around allocator.\n *\n * __GFP_NORETRY: The VM implementation must not retry indefinitely and will\n *   return NULL when direct reclaim and memory compaction have failed to allow\n *   the allocation to succeed.  The OOM killer is not called with the current\n *   implementation.\n */")]),s._v("\n\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//说明在查找空闲内存期间内核可以进行I/O操作")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("__GFP_IO")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__force gfp_t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("___GFP_IO"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//允许内核执行VFS操作")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("__GFP_FS")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__force gfp_t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("___GFP_FS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//当内存不足时，直接进入内存回收")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("__GFP_DIRECT_RECLAIM")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__force gfp_t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("___GFP_DIRECT_RECLAIM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" ")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Caller can reclaim */")])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//当内存不足时，希望唤醒内存回收，回收成功后分配")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("__GFP_KSWAPD_RECLAIM")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__force gfp_t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("___GFP_KSWAPD_RECLAIM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" ")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* kswapd can wake */")])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//上面两个flag的组合")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("__GFP_RECLAIM")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__force gfp_t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("___GFP_DIRECT_RECLAIM"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("___GFP_KSWAPD_RECLAIM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//在分配失败后自动重试，但在尝试若干次之后会停止")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("__GFP_REPEAT")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__force gfp_t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("___GFP_REPEAT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//在分配失败后一直重试，直至成功")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("__GFP_NOFAIL")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__force gfp_t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("___GFP_NOFAIL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//在分配失败后不重试直接返回")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("__GFP_NORETRY")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__force gfp_t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("___GFP_NORETRY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n * Action modifiers\n *\n * __GFP_COLD indicates that the caller does not expect to be used in the near\n *   future. Where possible, a cache-cold page will be returned.\n *\n * __GFP_NOWARN suppresses allocation failure reports.\n *\n * __GFP_COMP address compound page metadata.\n *\n * __GFP_ZERO returns a zeroed page on success.\n *\n * __GFP_NOTRACK avoids tracking with kmemcheck.\n *\n * __GFP_NOTRACK_FALSE_POSITIVE is an alias of __GFP_NOTRACK. It's a means of\n *   distinguishing in the source between false positives and allocations that\n *   cannot be supported (e.g. page tables).\n *\n * __GFP_OTHER_NODE is for allocations that are on a remote node but that\n *   should not be accounted for as a remote allocation in vmstat. A\n *   typical user would be khugepaged collapsing a huge page on a remote\n *   node.\n */")]),s._v("\n\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//分配一个不在cpu 缓存中的内存")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("__GFP_COLD")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__force gfp_t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("___GFP_COLD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//在分配失败时禁止内核故障警告")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("__GFP_NOWARN")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__force gfp_t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("___GFP_NOWARN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//分配大页时会使用")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("__GFP_COMP")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__force gfp_t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("___GFP_COMP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//返回的页面初始化为0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("__GFP_ZERO")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__force gfp_t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("___GFP_ZERO"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//避免被内存检测工具kmemcheck检测")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("__GFP_NOTRACK")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__force gfp_t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("___GFP_NOTRACK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//未知")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("__GFP_NOTRACK_FALSE_POSITIVE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__GFP_NOTRACK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//未知")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("__GFP_OTHER_NODE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__force gfp_t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("___GFP_OTHER_NODE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Room for N __GFP_FOO bits */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("__GFP_BITS_SHIFT "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("26")])])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("__GFP_BITS_MASK")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__force gfp_t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" __GFP_BITS_SHIFT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br"),a("span",{staticClass:"line-number"},[s._v("66")]),a("br"),a("span",{staticClass:"line-number"},[s._v("67")]),a("br"),a("span",{staticClass:"line-number"},[s._v("68")]),a("br"),a("span",{staticClass:"line-number"},[s._v("69")]),a("br"),a("span",{staticClass:"line-number"},[s._v("70")]),a("br"),a("span",{staticClass:"line-number"},[s._v("71")]),a("br"),a("span",{staticClass:"line-number"},[s._v("72")]),a("br"),a("span",{staticClass:"line-number"},[s._v("73")]),a("br"),a("span",{staticClass:"line-number"},[s._v("74")]),a("br"),a("span",{staticClass:"line-number"},[s._v("75")]),a("br"),a("span",{staticClass:"line-number"},[s._v("76")]),a("br"),a("span",{staticClass:"line-number"},[s._v("77")]),a("br"),a("span",{staticClass:"line-number"},[s._v("78")]),a("br"),a("span",{staticClass:"line-number"},[s._v("79")]),a("br"),a("span",{staticClass:"line-number"},[s._v("80")]),a("br"),a("span",{staticClass:"line-number"},[s._v("81")]),a("br"),a("span",{staticClass:"line-number"},[s._v("82")]),a("br"),a("span",{staticClass:"line-number"},[s._v("83")]),a("br"),a("span",{staticClass:"line-number"},[s._v("84")]),a("br"),a("span",{staticClass:"line-number"},[s._v("85")]),a("br"),a("span",{staticClass:"line-number"},[s._v("86")]),a("br"),a("span",{staticClass:"line-number"},[s._v("87")]),a("br"),a("span",{staticClass:"line-number"},[s._v("88")]),a("br"),a("span",{staticClass:"line-number"},[s._v("89")]),a("br"),a("span",{staticClass:"line-number"},[s._v("90")]),a("br"),a("span",{staticClass:"line-number"},[s._v("91")]),a("br"),a("span",{staticClass:"line-number"},[s._v("92")]),a("br"),a("span",{staticClass:"line-number"},[s._v("93")]),a("br"),a("span",{staticClass:"line-number"},[s._v("94")]),a("br"),a("span",{staticClass:"line-number"},[s._v("95")]),a("br"),a("span",{staticClass:"line-number"},[s._v("96")]),a("br"),a("span",{staticClass:"line-number"},[s._v("97")]),a("br"),a("span",{staticClass:"line-number"},[s._v("98")]),a("br"),a("span",{staticClass:"line-number"},[s._v("99")]),a("br"),a("span",{staticClass:"line-number"},[s._v("100")]),a("br"),a("span",{staticClass:"line-number"},[s._v("101")]),a("br"),a("span",{staticClass:"line-number"},[s._v("102")]),a("br"),a("span",{staticClass:"line-number"},[s._v("103")]),a("br"),a("span",{staticClass:"line-number"},[s._v("104")]),a("br"),a("span",{staticClass:"line-number"},[s._v("105")]),a("br"),a("span",{staticClass:"line-number"},[s._v("106")]),a("br"),a("span",{staticClass:"line-number"},[s._v("107")]),a("br"),a("span",{staticClass:"line-number"},[s._v("108")]),a("br"),a("span",{staticClass:"line-number"},[s._v("109")]),a("br"),a("span",{staticClass:"line-number"},[s._v("110")]),a("br"),a("span",{staticClass:"line-number"},[s._v("111")]),a("br"),a("span",{staticClass:"line-number"},[s._v("112")]),a("br"),a("span",{staticClass:"line-number"},[s._v("113")]),a("br"),a("span",{staticClass:"line-number"},[s._v("114")]),a("br"),a("span",{staticClass:"line-number"},[s._v("115")]),a("br"),a("span",{staticClass:"line-number"},[s._v("116")]),a("br"),a("span",{staticClass:"line-number"},[s._v("117")]),a("br"),a("span",{staticClass:"line-number"},[s._v("118")]),a("br"),a("span",{staticClass:"line-number"},[s._v("119")]),a("br"),a("span",{staticClass:"line-number"},[s._v("120")]),a("br"),a("span",{staticClass:"line-number"},[s._v("121")]),a("br"),a("span",{staticClass:"line-number"},[s._v("122")]),a("br"),a("span",{staticClass:"line-number"},[s._v("123")]),a("br"),a("span",{staticClass:"line-number"},[s._v("124")]),a("br"),a("span",{staticClass:"line-number"},[s._v("125")]),a("br"),a("span",{staticClass:"line-number"},[s._v("126")]),a("br"),a("span",{staticClass:"line-number"},[s._v("127")]),a("br"),a("span",{staticClass:"line-number"},[s._v("128")]),a("br"),a("span",{staticClass:"line-number"},[s._v("129")]),a("br"),a("span",{staticClass:"line-number"},[s._v("130")]),a("br"),a("span",{staticClass:"line-number"},[s._v("131")]),a("br"),a("span",{staticClass:"line-number"},[s._v("132")]),a("br"),a("span",{staticClass:"line-number"},[s._v("133")]),a("br"),a("span",{staticClass:"line-number"},[s._v("134")]),a("br"),a("span",{staticClass:"line-number"},[s._v("135")]),a("br"),a("span",{staticClass:"line-number"},[s._v("136")]),a("br"),a("span",{staticClass:"line-number"},[s._v("137")]),a("br"),a("span",{staticClass:"line-number"},[s._v("138")]),a("br"),a("span",{staticClass:"line-number"},[s._v("139")]),a("br"),a("span",{staticClass:"line-number"},[s._v("140")]),a("br"),a("span",{staticClass:"line-number"},[s._v("141")]),a("br"),a("span",{staticClass:"line-number"},[s._v("142")]),a("br"),a("span",{staticClass:"line-number"},[s._v("143")]),a("br"),a("span",{staticClass:"line-number"},[s._v("144")]),a("br"),a("span",{staticClass:"line-number"},[s._v("145")]),a("br"),a("span",{staticClass:"line-number"},[s._v("146")]),a("br"),a("span",{staticClass:"line-number"},[s._v("147")]),a("br"),a("span",{staticClass:"line-number"},[s._v("148")]),a("br"),a("span",{staticClass:"line-number"},[s._v("149")]),a("br"),a("span",{staticClass:"line-number"},[s._v("150")]),a("br"),a("span",{staticClass:"line-number"},[s._v("151")]),a("br"),a("span",{staticClass:"line-number"},[s._v("152")]),a("br"),a("span",{staticClass:"line-number"},[s._v("153")]),a("br"),a("span",{staticClass:"line-number"},[s._v("154")]),a("br"),a("span",{staticClass:"line-number"},[s._v("155")]),a("br"),a("span",{staticClass:"line-number"},[s._v("156")]),a("br"),a("span",{staticClass:"line-number"},[s._v("157")]),a("br"),a("span",{staticClass:"line-number"},[s._v("158")]),a("br"),a("span",{staticClass:"line-number"},[s._v("159")]),a("br"),a("span",{staticClass:"line-number"},[s._v("160")]),a("br"),a("span",{staticClass:"line-number"},[s._v("161")]),a("br"),a("span",{staticClass:"line-number"},[s._v("162")]),a("br"),a("span",{staticClass:"line-number"},[s._v("163")]),a("br"),a("span",{staticClass:"line-number"},[s._v("164")]),a("br"),a("span",{staticClass:"line-number"},[s._v("165")]),a("br"),a("span",{staticClass:"line-number"},[s._v("166")]),a("br"),a("span",{staticClass:"line-number"},[s._v("167")]),a("br"),a("span",{staticClass:"line-number"},[s._v("168")]),a("br"),a("span",{staticClass:"line-number"},[s._v("169")]),a("br"),a("span",{staticClass:"line-number"},[s._v("170")]),a("br"),a("span",{staticClass:"line-number"},[s._v("171")]),a("br"),a("span",{staticClass:"line-number"},[s._v("172")]),a("br"),a("span",{staticClass:"line-number"},[s._v("173")]),a("br"),a("span",{staticClass:"line-number"},[s._v("174")]),a("br"),a("span",{staticClass:"line-number"},[s._v("175")]),a("br"),a("span",{staticClass:"line-number"},[s._v("176")]),a("br"),a("span",{staticClass:"line-number"},[s._v("177")]),a("br"),a("span",{staticClass:"line-number"},[s._v("178")]),a("br"),a("span",{staticClass:"line-number"},[s._v("179")]),a("br"),a("span",{staticClass:"line-number"},[s._v("180")]),a("br"),a("span",{staticClass:"line-number"},[s._v("181")]),a("br"),a("span",{staticClass:"line-number"},[s._v("182")]),a("br"),a("span",{staticClass:"line-number"},[s._v("183")]),a("br"),a("span",{staticClass:"line-number"},[s._v("184")]),a("br"),a("span",{staticClass:"line-number"},[s._v("185")]),a("br"),a("span",{staticClass:"line-number"},[s._v("186")]),a("br"),a("span",{staticClass:"line-number"},[s._v("187")]),a("br"),a("span",{staticClass:"line-number"},[s._v("188")]),a("br"),a("span",{staticClass:"line-number"},[s._v("189")]),a("br"),a("span",{staticClass:"line-number"},[s._v("190")]),a("br"),a("span",{staticClass:"line-number"},[s._v("191")]),a("br"),a("span",{staticClass:"line-number"},[s._v("192")]),a("br"),a("span",{staticClass:"line-number"},[s._v("193")]),a("br"),a("span",{staticClass:"line-number"},[s._v("194")]),a("br"),a("span",{staticClass:"line-number"},[s._v("195")]),a("br"),a("span",{staticClass:"line-number"},[s._v("196")]),a("br"),a("span",{staticClass:"line-number"},[s._v("197")]),a("br"),a("span",{staticClass:"line-number"},[s._v("198")]),a("br"),a("span",{staticClass:"line-number"},[s._v("199")]),a("br"),a("span",{staticClass:"line-number"},[s._v("200")]),a("br"),a("span",{staticClass:"line-number"},[s._v("201")]),a("br"),a("span",{staticClass:"line-number"},[s._v("202")]),a("br"),a("span",{staticClass:"line-number"},[s._v("203")]),a("br"),a("span",{staticClass:"line-number"},[s._v("204")]),a("br"),a("span",{staticClass:"line-number"},[s._v("205")]),a("br"),a("span",{staticClass:"line-number"},[s._v("206")]),a("br"),a("span",{staticClass:"line-number"},[s._v("207")]),a("br"),a("span",{staticClass:"line-number"},[s._v("208")]),a("br"),a("span",{staticClass:"line-number"},[s._v("209")]),a("br"),a("span",{staticClass:"line-number"},[s._v("210")]),a("br"),a("span",{staticClass:"line-number"},[s._v("211")]),a("br")])]),a("h3",{attrs:{id:"_1-3-最终掩码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-最终掩码"}},[s._v("#")]),s._v(" 1.3 最终掩码")]),s._v(" "),a("p",[s._v("这部分的掩码就是我们在分配内存过程经常会使用的掩码。")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('/*\n * Useful GFP flag combinations that are commonly used. It is recommended\n * that subsystems start with one of these combinations and then set/clear\n * __GFP_FOO flags as necessary.\n *\n * GFP_ATOMIC users can not sleep and need the allocation to succeed. A lower\n *   watermark is applied to allow access to "atomic reserves"\n *\n * GFP_KERNEL is typical for kernel-internal allocations. The caller requires\n *   ZONE_NORMAL or a lower zone for direct access but can direct reclaim.\n *\n * GFP_NOWAIT is for kernel allocations that should not stall for direct\n *   reclaim, start physical IO or use any filesystem callback.\n *\n * GFP_NOIO will use direct reclaim to discard clean pages or slab pages\n *   that do not require the starting of any physical IO.\n *\n * GFP_NOFS will use direct reclaim but will not use any filesystem interfaces.\n *\n * GFP_USER is for userspace allocations that also need to be directly\n *   accessibly by the kernel or hardware. It is typically used by hardware\n *   for buffers that are mapped to userspace (e.g. graphics) that hardware\n *   still must DMA to. cpuset limits are enforced for these allocations.\n *\n * GFP_DMA exists for historical reasons and should be avoided where possible.\n *   The flags indicates that the caller requires that the lowest zone be\n *   used (ZONE_DMA or 16M on x86-64). Ideally, this would be removed but\n *   it would require careful auditing as some users really require it and\n *   others use the flag to avoid lowmem reserves in ZONE_DMA and treat the\n *   lowest zone as a type of emergency reserve.\n *\n * GFP_DMA32 is similar to GFP_DMA except that the caller requires a 32-bit\n *   address.\n *\n * GFP_HIGHUSER is for userspace allocations that may be mapped to userspace,\n *   do not need to be directly accessible by the kernel but that cannot\n *   move once in use. An example may be a hardware allocation that maps\n *   data directly into userspace but has no addressing limitations.\n *\n * GFP_HIGHUSER_MOVABLE is for userspace allocations that the kernel does not\n *   need direct access to but can use kmap() when access is required. They\n *   are expected to be movable via page reclaim or page migration. Typically,\n *   pages on the LRU would also be allocated with GFP_HIGHUSER_MOVABLE.\n *\n * GFP_TRANSHUGE is used for THP allocations. They are compound allocations\n *   that will fail quickly if memory is not available and will not wake\n *   kswapd on failure.\n */')]),s._v("\n\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//用于原子分配，不能中断, 可使用紧急分配链表中的内存, 这个标志用在中断处理程序, 下半部, ")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//持有自旋锁以及其他不能睡眠的地方")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("GFP_ATOMIC")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__GFP_HIGH"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("__GFP_ATOMIC"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("__GFP_KSWAPD_RECLAIM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//这是一种常规的分配方式, 可能会阻塞. 这个标志在睡眠安全时用在进程的长下文代码中. 为了获取调用者所需的内存,")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//内核会尽力而为. 这个标志应该是首选标志")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("GFP_KERNEL")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__GFP_RECLAIM "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" __GFP_IO "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" __GFP_FS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//与GFP_ATOMIC类似")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("GFP_NOWAIT")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__GFP_KSWAPD_RECLAIM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//这种分配可以阻塞, 但不会启动磁盘I/O, 这个标志在不能引发更多的磁盘I/O时阻塞I/O代码")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("GFP_NOIO")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__GFP_RECLAIM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//这种分配在必要时可以阻塞, 但是也可能启动磁盘, 但是不会启动文件系统操作")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("GFP_NOFS")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__GFP_RECLAIM "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" __GFP_IO"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("GFP_TEMPORARY")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__GFP_RECLAIM "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" __GFP_IO "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" __GFP_FS "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t\t\t "),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("__GFP_RECLAIMABLE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//这是一种常规的分配方式, 可能会阻塞. 这个标志用于为用户空间进程分配内存时使用")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("GFP_USER")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__GFP_RECLAIM "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" __GFP_IO "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" __GFP_FS "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" __GFP_HARDWALL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//用于分配适用于DMA的内存")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("GFP_DMA\t\t__GFP_DMA")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("GFP_DMA32\t__GFP_DMA32")])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//是GFP_USER的一个扩展, 也用于用户空间. 它允许分配无法直接映射的高端内存")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("GFP_HIGHUSER")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("GFP_USER "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" __GFP_HIGHMEM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("GFP_HIGHUSER_MOVABLE")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("GFP_HIGHUSER "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" __GFP_MOVABLE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("GFP_TRANSHUGE")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("GFP_HIGHUSER_MOVABLE "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" __GFP_COMP "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t\t\t "),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("__GFP_NOMEMALLOC "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" __GFP_NORETRY "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" __GFP_NOWARN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t\t\t "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),s._v("__GFP_KSWAPD_RECLAIM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br"),a("span",{staticClass:"line-number"},[s._v("66")]),a("br"),a("span",{staticClass:"line-number"},[s._v("67")]),a("br"),a("span",{staticClass:"line-number"},[s._v("68")]),a("br"),a("span",{staticClass:"line-number"},[s._v("69")]),a("br"),a("span",{staticClass:"line-number"},[s._v("70")]),a("br"),a("span",{staticClass:"line-number"},[s._v("71")]),a("br"),a("span",{staticClass:"line-number"},[s._v("72")]),a("br"),a("span",{staticClass:"line-number"},[s._v("73")]),a("br"),a("span",{staticClass:"line-number"},[s._v("74")]),a("br"),a("span",{staticClass:"line-number"},[s._v("75")]),a("br"),a("span",{staticClass:"line-number"},[s._v("76")]),a("br"),a("span",{staticClass:"line-number"},[s._v("77")]),a("br"),a("span",{staticClass:"line-number"},[s._v("78")]),a("br"),a("span",{staticClass:"line-number"},[s._v("79")]),a("br"),a("span",{staticClass:"line-number"},[s._v("80")]),a("br"),a("span",{staticClass:"line-number"},[s._v("81")]),a("br"),a("span",{staticClass:"line-number"},[s._v("82")]),a("br"),a("span",{staticClass:"line-number"},[s._v("83")]),a("br")])]),a("h2",{attrs:{id:"掩码的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#掩码的使用"}},[s._v("#")]),s._v(" 掩码的使用")]),s._v(" "),a("p",[s._v("经常使用是就是上面1.3中描述的掩码组合，具体含义如1.3注释。")]),s._v(" "),a("hr"),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),a("p",[s._v("转载请注明出处！ "),a("a",{attrs:{href:"http://www.cxy.wiki",target:"_blank",rel:"noopener noreferrer"}},[s._v("探索者"),a("OutboundLink")],1)])]),s._v(" "),a("Vssue",{attrs:{title:s.$title}})],1)}),[],!1,null,null,null);t.default=e.exports}}]);