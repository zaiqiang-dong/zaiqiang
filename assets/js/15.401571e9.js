(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{374:function(s,n,e){"use strict";e.r(n);var a=e(24),t=Object(a.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"页分配掩码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#页分配掩码"}},[s._v("#")]),s._v(" 页分配掩码")]),s._v(" "),e("hr"),s._v(" "),e("table",[e("thead",[e("tr",[e("th",[s._v("软件版本")]),s._v(" "),e("th",[s._v("硬件版本")]),s._v(" "),e("th",[s._v("更新内容")])])]),s._v(" "),e("tbody",[e("tr",[e("td",[s._v("linux 4.19")]),s._v(" "),e("td",[s._v("arm64")]),s._v(" "),e("td")])])]),s._v(" "),e("hr"),s._v(" "),e("h2",{attrs:{id:"第一部分"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第一部分"}},[s._v("#")]),s._v(" 第一部分")]),s._v(" "),e("p",[s._v("最原始的一部分flags（前面带三个_）,后面的flags基本都是用这部分“或/组合”出来的,具体信息如下：")]),s._v(" "),e("div",{staticClass:"language-c line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Plain integer GFP bitmasks. Do not use this directly. */")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n * 分配区域指定\n */")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//从ZONE_DMA区域分配内存")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" ___GFP_DMA \t\t0x01u")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//从ZONE_HIGHMEM活ZONE_NORMAL中分配内存")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" ___GFP_HIGHMEM\t\t0x02u")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//从ZONE_DMA32中分配内存")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" ___GFP_DMA32\t\t0x04u")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n * 分配行为指定\n */")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//页是可移动的")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" ___GFP_MOVABLE\t\t0x08u")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//页是可回收的")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" ___GFP_RECLAIMABLE\t0x10u")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//未知")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" ___GFP_HIGH\t\t0x20u")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//未知\t\t\t")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" ___GFP_IO\t\t0x40u")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//未知")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" ___GFP_FS\t\t0x80u")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//需要非缓存的冷页")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" ___GFP_COLD\t\t0x100u")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//禁止分配失败警告")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" ___GFP_NOWARN\t\t0x200u")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//一直重试直到成功\t\t\t\t")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" ___GFP_REPEAT\t\t0x400u")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" ___GFP_NOFAIL\t\t0x800u")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//失败返回不重试")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" ___GFP_NORETRY\t\t0x1000u")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//使用紧急分配链表")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" ___GFP_MEMALLOC\t\t0x2000u")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//未知")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" ___GFP_COMP\t\t0x4000u")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//返回的页面初始化为0")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" ___GFP_ZERO\t\t0x8000u")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n * 分配类型指定\n */")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//不使用紧急分配链表")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" ___GFP_NOMEMALLOC\t0x10000u")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//只允许在进程允许运行的CPU所关联的PCP分配内存")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" ___GFP_HARDWALL\t\t0x20000u")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//未知")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" ___GFP_THISNODE\t\t0x40000u")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//用于原子分配，在任何情况下都不能中断")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" ___GFP_ATOMIC\t\t0x80000u")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//未知")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" ___GFP_NOACCOUNT\t0x100000u")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//避免被内存检测工具kmemcheck检测")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" ___GFP_NOTRACK\t\t0x200000u")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//当内存不足时，直接进入内存回收")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" ___GFP_DIRECT_RECLAIM\t0x400000u")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//未知")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" ___GFP_OTHER_NODE\t0x800000u")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//未知")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" ___GFP_WRITE\t\t0x1000000u")]),s._v("\n\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//当内存不足时，唤醒内存回收")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" ___GFP_KSWAPD_RECLAIM\t0x2000000u")]),s._v("\n\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br"),e("span",{staticClass:"line-number"},[s._v("77")]),e("br"),e("span",{staticClass:"line-number"},[s._v("78")]),e("br"),e("span",{staticClass:"line-number"},[s._v("79")]),e("br"),e("span",{staticClass:"line-number"},[s._v("80")]),e("br"),e("span",{staticClass:"line-number"},[s._v("81")]),e("br"),e("span",{staticClass:"line-number"},[s._v("82")]),e("br"),e("span",{staticClass:"line-number"},[s._v("83")]),e("br"),e("span",{staticClass:"line-number"},[s._v("84")]),e("br"),e("span",{staticClass:"line-number"},[s._v("85")]),e("br"),e("span",{staticClass:"line-number"},[s._v("86")]),e("br"),e("span",{staticClass:"line-number"},[s._v("87")]),e("br"),e("span",{staticClass:"line-number"},[s._v("88")]),e("br"),e("span",{staticClass:"line-number"},[s._v("89")]),e("br"),e("span",{staticClass:"line-number"},[s._v("90")]),e("br"),e("span",{staticClass:"line-number"},[s._v("91")]),e("br"),e("span",{staticClass:"line-number"},[s._v("92")]),e("br"),e("span",{staticClass:"line-number"},[s._v("93")]),e("br"),e("span",{staticClass:"line-number"},[s._v("94")]),e("br")])]),e("h2",{attrs:{id:"第二部分"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第二部分"}},[s._v("#")]),s._v(" 第二部分")]),s._v(" "),e("p",[s._v("这个部分一分是由第一部分的flags中的一个或者多个组合而成。")]),s._v(" "),e("div",{staticClass:"language-c line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* If the above are modified, __GFP_BITS_SHIFT may need updating */")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n * Physical address zone modifiers (see linux/mmzone.h - low four bits)\n *\n * Do not put any conditional on these. If necessary modify the definitions\n * without the underscores and use them consistently. The definitions here may\n * be used in bit comparisons.\n */")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n * 这个基本和第一部分一样\n * 使用了__force修饰的变量可以进行强制类型转换, 没有使用 __force修饰的变量进行强制类型转换时, Sparse会给出警告.\n */")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//和第一部分基本一样")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" __GFP_DMA\t((__force gfp_t)___GFP_DMA)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" __GFP_HIGHMEM\t((__force gfp_t)___GFP_HIGHMEM)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" __GFP_DMA32\t((__force gfp_t)___GFP_DMA32)")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//是页迁移机制所需的标志，可移动的")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" __GFP_MOVABLE\t((__force gfp_t)___GFP_MOVABLE)  ")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Page is movable */")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" __GFP_MOVABLE\t((__force gfp_t)___GFP_MOVABLE)  ")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* ZONE_MOVABLE allowed */")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//第一部分的组合")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" GFP_ZONEMASK\t(__GFP_DMA|__GFP_HIGHMEM|__GFP_DMA32|__GFP_MOVABLE)")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n * Page mobility and placement hints\n *\n * These flags provide hints about how mobile the page is. Pages with similar\n * mobility are placed within the same pageblocks to minimise problems due\n * to external fragmentation.\n *\n * __GFP_MOVABLE (also a zone modifier) indicates that the page can be\n *   moved by page migration during memory compaction or can be reclaimed.\n *\n * __GFP_RECLAIMABLE is used for slab allocations that specify\n *   SLAB_RECLAIM_ACCOUNT and whose pages can be freed via shrinkers.\n *\n * __GFP_WRITE indicates the caller intends to dirty the page. Where possible,\n *   these pages will be spread between local zones to avoid all the dirty\n *   pages being in one zone (fair zone allocation policy).\n *\n * __GFP_HARDWALL enforces the cpuset memory allocation policy.\n *\n * __GFP_THISNODE forces the allocation to be satisified from the requested\n *   node with no fallbacks or placement policy enforcements.\n */")]),s._v("\n \n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//是页迁移机制所需的标志，可回收的")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" __GFP_RECLAIMABLE ((__force gfp_t)___GFP_RECLAIMABLE)")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//未知")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" __GFP_WRITE\t((__force gfp_t)___GFP_WRITE)")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//未知")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" __GFP_HARDWALL   ((__force gfp_t)___GFP_HARDWALL)")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//未知")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" __GFP_THISNODE\t((__force gfp_t)___GFP_THISNODE)")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n * Watermark modifiers -- controls access to emergency reserves\n *\n * __GFP_HIGH indicates that the caller is high-priority and that granting\n *   the request is necessary before the system can make forward progress.\n *   For example, creating an IO context to clean pages.\n *\n * __GFP_ATOMIC indicates that the caller cannot reclaim or sleep and is\n *   high priority. Users are typically interrupt handlers. This may be\n *   used in conjunction with __GFP_HIGH\n *\n * __GFP_MEMALLOC allows access to all memory. This should only be used when\n *   the caller guarantees the allocation will allow more memory to be freed\n *   very shortly e.g. process exiting or swapping. Users either should\n *   be the MM or co-ordinating closely with the VM (e.g. swap over NFS).\n *\n * __GFP_NOMEMALLOC is used to explicitly forbid access to emergency reserves.\n *   This takes precedence over the __GFP_MEMALLOC flag if both are set.\n *\n * __GFP_NOACCOUNT ignores the accounting for kmemcg limit enforcement.\n */")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//中断中分配内存会使用，表明不允许打断")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" __GFP_ATOMIC\t((__force gfp_t)___GFP_ATOMIC)")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//高优先级分配内存，")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" __GFP_HIGH\t((__force gfp_t)___GFP_HIGH)")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//调用者需要很快释放分配的内存")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" __GFP_MEMALLOC\t((__force gfp_t)___GFP_MEMALLOC)")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//禁止从应急的内存空间分配 ")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" __GFP_NOMEMALLOC ((__force gfp_t)___GFP_NOMEMALLOC)")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//未知")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" __GFP_NOACCOUNT\t((__force gfp_t)___GFP_NOACCOUNT)")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n * Reclaim modifiers\n *\n * __GFP_IO can start physical IO.\n *\n * __GFP_FS can call down to the low-level FS. Clearing the flag avoids the\n *   allocator recursing into the filesystem which might already be holding\n *   locks.\n *\n * __GFP_DIRECT_RECLAIM indicates that the caller may enter direct reclaim.\n *   This flag can be cleared to avoid unnecessary delays when a fallback\n *   option is available.\n *\n * __GFP_KSWAPD_RECLAIM indicates that the caller wants to wake kswapd when\n *   the low watermark is reached and have it reclaim pages until the high\n *   watermark is reached. A caller may wish to clear this flag when fallback\n *   options are available and the reclaim is likely to disrupt the system. The\n *   canonical example is THP allocation where a fallback is cheap but\n *   reclaim/compaction may cause indirect stalls.\n *\n * __GFP_RECLAIM is shorthand to allow/forbid both direct and kswapd reclaim.\n *\n * __GFP_REPEAT: Try hard to allocate the memory, but the allocation attempt\n *   _might_ fail.  This depends upon the particular VM implementation.\n *\n * __GFP_NOFAIL: The VM implementation _must_ retry infinitely: the caller\n *   cannot handle allocation failures. New users should be evaluated carefully\n *   (and the flag should be used only when there is no reasonable failure\n *   policy) but it is definitely preferable to use the flag rather than\n *   opencode endless loop around allocator.\n *\n * __GFP_NORETRY: The VM implementation must not retry indefinitely and will\n *   return NULL when direct reclaim and memory compaction have failed to allow\n *   the allocation to succeed.  The OOM killer is not called with the current\n *   implementation.\n */")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//说明在查找空闲内存期间内核可以进行I/O操作")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" __GFP_IO\t((__force gfp_t)___GFP_IO)")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//允许内核执行VFS操作")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" __GFP_FS\t((__force gfp_t)___GFP_FS)")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//当内存不足时，直接进入内存回收")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" __GFP_DIRECT_RECLAIM\t((__force gfp_t)___GFP_DIRECT_RECLAIM) ")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Caller can reclaim */")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//当内存不足时，希望唤醒内存回收，回收成功后分配")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" __GFP_KSWAPD_RECLAIM\t((__force gfp_t)___GFP_KSWAPD_RECLAIM) ")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* kswapd can wake */")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//上面两个flag的组合")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" __GFP_RECLAIM ((__force gfp_t)(___GFP_DIRECT_RECLAIM|___GFP_KSWAPD_RECLAIM))")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//在分配失败后自动重试，但在尝试若干次之后会停止")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" __GFP_REPEAT\t((__force gfp_t)___GFP_REPEAT)")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//在分配失败后一直重试，直至成功")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" __GFP_NOFAIL\t((__force gfp_t)___GFP_NOFAIL)")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//在分配失败后不重试直接返回")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" __GFP_NORETRY\t((__force gfp_t)___GFP_NORETRY)")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n * Action modifiers\n *\n * __GFP_COLD indicates that the caller does not expect to be used in the near\n *   future. Where possible, a cache-cold page will be returned.\n *\n * __GFP_NOWARN suppresses allocation failure reports.\n *\n * __GFP_COMP address compound page metadata.\n *\n * __GFP_ZERO returns a zeroed page on success.\n *\n * __GFP_NOTRACK avoids tracking with kmemcheck.\n *\n * __GFP_NOTRACK_FALSE_POSITIVE is an alias of __GFP_NOTRACK. It's a means of\n *   distinguishing in the source between false positives and allocations that\n *   cannot be supported (e.g. page tables).\n *\n * __GFP_OTHER_NODE is for allocations that are on a remote node but that\n *   should not be accounted for as a remote allocation in vmstat. A\n *   typical user would be khugepaged collapsing a huge page on a remote\n *   node.\n */")]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//分配一个不在cpu 缓存中的内存")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" __GFP_COLD\t((__force gfp_t)___GFP_COLD)")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//在分配失败时禁止内核故障警告")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" __GFP_NOWARN\t((__force gfp_t)___GFP_NOWARN)")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//未知")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" __GFP_COMP\t((__force gfp_t)___GFP_COMP)")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//返回的页面初始化为0")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" __GFP_ZERO\t((__force gfp_t)___GFP_ZERO)")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//避免被内存检测工具kmemcheck检测")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" __GFP_NOTRACK\t((__force gfp_t)___GFP_NOTRACK)")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//未知")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" __GFP_NOTRACK_FALSE_POSITIVE (__GFP_NOTRACK)")]),s._v("\n\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//未知")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" __GFP_OTHER_NODE ((__force gfp_t)___GFP_OTHER_NODE)")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Room for N __GFP_FOO bits */")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" __GFP_BITS_SHIFT 26")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" __GFP_BITS_MASK ((__force gfp_t)((1 << __GFP_BITS_SHIFT) - 1))")]),s._v("\n\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br"),e("span",{staticClass:"line-number"},[s._v("77")]),e("br"),e("span",{staticClass:"line-number"},[s._v("78")]),e("br"),e("span",{staticClass:"line-number"},[s._v("79")]),e("br"),e("span",{staticClass:"line-number"},[s._v("80")]),e("br"),e("span",{staticClass:"line-number"},[s._v("81")]),e("br"),e("span",{staticClass:"line-number"},[s._v("82")]),e("br"),e("span",{staticClass:"line-number"},[s._v("83")]),e("br"),e("span",{staticClass:"line-number"},[s._v("84")]),e("br"),e("span",{staticClass:"line-number"},[s._v("85")]),e("br"),e("span",{staticClass:"line-number"},[s._v("86")]),e("br"),e("span",{staticClass:"line-number"},[s._v("87")]),e("br"),e("span",{staticClass:"line-number"},[s._v("88")]),e("br"),e("span",{staticClass:"line-number"},[s._v("89")]),e("br"),e("span",{staticClass:"line-number"},[s._v("90")]),e("br"),e("span",{staticClass:"line-number"},[s._v("91")]),e("br"),e("span",{staticClass:"line-number"},[s._v("92")]),e("br"),e("span",{staticClass:"line-number"},[s._v("93")]),e("br"),e("span",{staticClass:"line-number"},[s._v("94")]),e("br"),e("span",{staticClass:"line-number"},[s._v("95")]),e("br"),e("span",{staticClass:"line-number"},[s._v("96")]),e("br"),e("span",{staticClass:"line-number"},[s._v("97")]),e("br"),e("span",{staticClass:"line-number"},[s._v("98")]),e("br"),e("span",{staticClass:"line-number"},[s._v("99")]),e("br"),e("span",{staticClass:"line-number"},[s._v("100")]),e("br"),e("span",{staticClass:"line-number"},[s._v("101")]),e("br"),e("span",{staticClass:"line-number"},[s._v("102")]),e("br"),e("span",{staticClass:"line-number"},[s._v("103")]),e("br"),e("span",{staticClass:"line-number"},[s._v("104")]),e("br"),e("span",{staticClass:"line-number"},[s._v("105")]),e("br"),e("span",{staticClass:"line-number"},[s._v("106")]),e("br"),e("span",{staticClass:"line-number"},[s._v("107")]),e("br"),e("span",{staticClass:"line-number"},[s._v("108")]),e("br"),e("span",{staticClass:"line-number"},[s._v("109")]),e("br"),e("span",{staticClass:"line-number"},[s._v("110")]),e("br"),e("span",{staticClass:"line-number"},[s._v("111")]),e("br"),e("span",{staticClass:"line-number"},[s._v("112")]),e("br"),e("span",{staticClass:"line-number"},[s._v("113")]),e("br"),e("span",{staticClass:"line-number"},[s._v("114")]),e("br"),e("span",{staticClass:"line-number"},[s._v("115")]),e("br"),e("span",{staticClass:"line-number"},[s._v("116")]),e("br"),e("span",{staticClass:"line-number"},[s._v("117")]),e("br"),e("span",{staticClass:"line-number"},[s._v("118")]),e("br"),e("span",{staticClass:"line-number"},[s._v("119")]),e("br"),e("span",{staticClass:"line-number"},[s._v("120")]),e("br"),e("span",{staticClass:"line-number"},[s._v("121")]),e("br"),e("span",{staticClass:"line-number"},[s._v("122")]),e("br"),e("span",{staticClass:"line-number"},[s._v("123")]),e("br"),e("span",{staticClass:"line-number"},[s._v("124")]),e("br"),e("span",{staticClass:"line-number"},[s._v("125")]),e("br"),e("span",{staticClass:"line-number"},[s._v("126")]),e("br"),e("span",{staticClass:"line-number"},[s._v("127")]),e("br"),e("span",{staticClass:"line-number"},[s._v("128")]),e("br"),e("span",{staticClass:"line-number"},[s._v("129")]),e("br"),e("span",{staticClass:"line-number"},[s._v("130")]),e("br"),e("span",{staticClass:"line-number"},[s._v("131")]),e("br"),e("span",{staticClass:"line-number"},[s._v("132")]),e("br"),e("span",{staticClass:"line-number"},[s._v("133")]),e("br"),e("span",{staticClass:"line-number"},[s._v("134")]),e("br"),e("span",{staticClass:"line-number"},[s._v("135")]),e("br"),e("span",{staticClass:"line-number"},[s._v("136")]),e("br"),e("span",{staticClass:"line-number"},[s._v("137")]),e("br"),e("span",{staticClass:"line-number"},[s._v("138")]),e("br"),e("span",{staticClass:"line-number"},[s._v("139")]),e("br"),e("span",{staticClass:"line-number"},[s._v("140")]),e("br"),e("span",{staticClass:"line-number"},[s._v("141")]),e("br"),e("span",{staticClass:"line-number"},[s._v("142")]),e("br"),e("span",{staticClass:"line-number"},[s._v("143")]),e("br"),e("span",{staticClass:"line-number"},[s._v("144")]),e("br"),e("span",{staticClass:"line-number"},[s._v("145")]),e("br"),e("span",{staticClass:"line-number"},[s._v("146")]),e("br"),e("span",{staticClass:"line-number"},[s._v("147")]),e("br"),e("span",{staticClass:"line-number"},[s._v("148")]),e("br"),e("span",{staticClass:"line-number"},[s._v("149")]),e("br"),e("span",{staticClass:"line-number"},[s._v("150")]),e("br"),e("span",{staticClass:"line-number"},[s._v("151")]),e("br"),e("span",{staticClass:"line-number"},[s._v("152")]),e("br"),e("span",{staticClass:"line-number"},[s._v("153")]),e("br"),e("span",{staticClass:"line-number"},[s._v("154")]),e("br"),e("span",{staticClass:"line-number"},[s._v("155")]),e("br"),e("span",{staticClass:"line-number"},[s._v("156")]),e("br"),e("span",{staticClass:"line-number"},[s._v("157")]),e("br"),e("span",{staticClass:"line-number"},[s._v("158")]),e("br"),e("span",{staticClass:"line-number"},[s._v("159")]),e("br"),e("span",{staticClass:"line-number"},[s._v("160")]),e("br"),e("span",{staticClass:"line-number"},[s._v("161")]),e("br"),e("span",{staticClass:"line-number"},[s._v("162")]),e("br"),e("span",{staticClass:"line-number"},[s._v("163")]),e("br"),e("span",{staticClass:"line-number"},[s._v("164")]),e("br"),e("span",{staticClass:"line-number"},[s._v("165")]),e("br"),e("span",{staticClass:"line-number"},[s._v("166")]),e("br"),e("span",{staticClass:"line-number"},[s._v("167")]),e("br"),e("span",{staticClass:"line-number"},[s._v("168")]),e("br"),e("span",{staticClass:"line-number"},[s._v("169")]),e("br"),e("span",{staticClass:"line-number"},[s._v("170")]),e("br"),e("span",{staticClass:"line-number"},[s._v("171")]),e("br"),e("span",{staticClass:"line-number"},[s._v("172")]),e("br"),e("span",{staticClass:"line-number"},[s._v("173")]),e("br"),e("span",{staticClass:"line-number"},[s._v("174")]),e("br"),e("span",{staticClass:"line-number"},[s._v("175")]),e("br"),e("span",{staticClass:"line-number"},[s._v("176")]),e("br"),e("span",{staticClass:"line-number"},[s._v("177")]),e("br"),e("span",{staticClass:"line-number"},[s._v("178")]),e("br"),e("span",{staticClass:"line-number"},[s._v("179")]),e("br"),e("span",{staticClass:"line-number"},[s._v("180")]),e("br"),e("span",{staticClass:"line-number"},[s._v("181")]),e("br"),e("span",{staticClass:"line-number"},[s._v("182")]),e("br"),e("span",{staticClass:"line-number"},[s._v("183")]),e("br"),e("span",{staticClass:"line-number"},[s._v("184")]),e("br"),e("span",{staticClass:"line-number"},[s._v("185")]),e("br"),e("span",{staticClass:"line-number"},[s._v("186")]),e("br"),e("span",{staticClass:"line-number"},[s._v("187")]),e("br"),e("span",{staticClass:"line-number"},[s._v("188")]),e("br"),e("span",{staticClass:"line-number"},[s._v("189")]),e("br"),e("span",{staticClass:"line-number"},[s._v("190")]),e("br"),e("span",{staticClass:"line-number"},[s._v("191")]),e("br"),e("span",{staticClass:"line-number"},[s._v("192")]),e("br"),e("span",{staticClass:"line-number"},[s._v("193")]),e("br"),e("span",{staticClass:"line-number"},[s._v("194")]),e("br"),e("span",{staticClass:"line-number"},[s._v("195")]),e("br"),e("span",{staticClass:"line-number"},[s._v("196")]),e("br"),e("span",{staticClass:"line-number"},[s._v("197")]),e("br"),e("span",{staticClass:"line-number"},[s._v("198")]),e("br"),e("span",{staticClass:"line-number"},[s._v("199")]),e("br"),e("span",{staticClass:"line-number"},[s._v("200")]),e("br"),e("span",{staticClass:"line-number"},[s._v("201")]),e("br"),e("span",{staticClass:"line-number"},[s._v("202")]),e("br"),e("span",{staticClass:"line-number"},[s._v("203")]),e("br"),e("span",{staticClass:"line-number"},[s._v("204")]),e("br"),e("span",{staticClass:"line-number"},[s._v("205")]),e("br"),e("span",{staticClass:"line-number"},[s._v("206")]),e("br"),e("span",{staticClass:"line-number"},[s._v("207")]),e("br"),e("span",{staticClass:"line-number"},[s._v("208")]),e("br"),e("span",{staticClass:"line-number"},[s._v("209")]),e("br"),e("span",{staticClass:"line-number"},[s._v("210")]),e("br"),e("span",{staticClass:"line-number"},[s._v("211")]),e("br")])]),e("h2",{attrs:{id:"第三部分"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第三部分"}},[s._v("#")]),s._v(" 第三部分")]),s._v(" "),e("div",{staticClass:"language-c line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('/*\n * Useful GFP flag combinations that are commonly used. It is recommended\n * that subsystems start with one of these combinations and then set/clear\n * __GFP_FOO flags as necessary.\n *\n * GFP_ATOMIC users can not sleep and need the allocation to succeed. A lower\n *   watermark is applied to allow access to "atomic reserves"\n *\n * GFP_KERNEL is typical for kernel-internal allocations. The caller requires\n *   ZONE_NORMAL or a lower zone for direct access but can direct reclaim.\n *\n * GFP_NOWAIT is for kernel allocations that should not stall for direct\n *   reclaim, start physical IO or use any filesystem callback.\n *\n * GFP_NOIO will use direct reclaim to discard clean pages or slab pages\n *   that do not require the starting of any physical IO.\n *\n * GFP_NOFS will use direct reclaim but will not use any filesystem interfaces.\n *\n * GFP_USER is for userspace allocations that also need to be directly\n *   accessibly by the kernel or hardware. It is typically used by hardware\n *   for buffers that are mapped to userspace (e.g. graphics) that hardware\n *   still must DMA to. cpuset limits are enforced for these allocations.\n *\n * GFP_DMA exists for historical reasons and should be avoided where possible.\n *   The flags indicates that the caller requires that the lowest zone be\n *   used (ZONE_DMA or 16M on x86-64). Ideally, this would be removed but\n *   it would require careful auditing as some users really require it and\n *   others use the flag to avoid lowmem reserves in ZONE_DMA and treat the\n *   lowest zone as a type of emergency reserve.\n *\n * GFP_DMA32 is similar to GFP_DMA except that the caller requires a 32-bit\n *   address.\n *\n * GFP_HIGHUSER is for userspace allocations that may be mapped to userspace,\n *   do not need to be directly accessible by the kernel but that cannot\n *   move once in use. An example may be a hardware allocation that maps\n *   data directly into userspace but has no addressing limitations.\n *\n * GFP_HIGHUSER_MOVABLE is for userspace allocations that the kernel does not\n *   need direct access to but can use kmap() when access is required. They\n *   are expected to be movable via page reclaim or page migration. Typically,\n *   pages on the LRU would also be allocated with GFP_HIGHUSER_MOVABLE.\n *\n * GFP_TRANSHUGE is used for THP allocations. They are compound allocations\n *   that will fail quickly if memory is not available and will not wake\n *   kswapd on failure.\n */')]),s._v("\n\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//用于原子分配，在任何情况下都不能中断, 可能使用紧急分配链表中的内存, 这个标志用在中断处理程序, 下半部, ")]),s._v("\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//持有自旋锁以及其他不能睡眠的地方")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" GFP_ATOMIC\t(__GFP_HIGH|__GFP_ATOMIC|__GFP_KSWAPD_RECLAIM)")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//这是一种常规的分配方式, 可能会阻塞. 这个标志在睡眠安全时用在进程的长下文代码中. 为了获取调用者所需的内存,")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//内核会尽力而为. 这个标志应该是首选标志")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" GFP_KERNEL\t(__GFP_RECLAIM | __GFP_IO | __GFP_FS)")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//与GFP_ATOMIC类似, 不同之处在于, 调用不会退给紧急内存池, 这就增加了内存分配失败的可能性")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" GFP_NOWAIT\t(__GFP_KSWAPD_RECLAIM)")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//这种分配可以阻塞, 但不会启动磁盘I/O, 这个标志在不能引发更多的磁盘I/O时阻塞I/O代码")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" GFP_NOIO\t(__GFP_RECLAIM)")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//这种分配在必要时可以阻塞, 但是也可能启动磁盘, 但是不会启动文件系统操作")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" GFP_NOFS\t(__GFP_RECLAIM | __GFP_IO)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" GFP_TEMPORARY\t(__GFP_RECLAIM | __GFP_IO | __GFP_FS | \\\n\t\t\t __GFP_RECLAIMABLE)")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//这是一种常规的分配方式, 可能会阻塞. 这个标志用于为用户空间进程分配内存时使用")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" GFP_USER\t(__GFP_RECLAIM | __GFP_IO | __GFP_FS | __GFP_HARDWALL)")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//用于分配适用于DMA的内存")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" GFP_DMA\t\t__GFP_DMA")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" GFP_DMA32\t__GFP_DMA32")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//是GFP_USER的一个扩展, 也用于用户空间. 它允许分配无法直接映射的高端内存")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" GFP_HIGHUSER\t(GFP_USER | __GFP_HIGHMEM)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" GFP_HIGHUSER_MOVABLE\t(GFP_HIGHUSER | __GFP_MOVABLE)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" GFP_TRANSHUGE\t((GFP_HIGHUSER_MOVABLE | __GFP_COMP | \\\n\t\t\t __GFP_NOMEMALLOC | __GFP_NORETRY | __GFP_NOWARN) & \\\n\t\t\t ~__GFP_KSWAPD_RECLAIM)")]),s._v("\n\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br"),e("span",{staticClass:"line-number"},[s._v("77")]),e("br"),e("span",{staticClass:"line-number"},[s._v("78")]),e("br"),e("span",{staticClass:"line-number"},[s._v("79")]),e("br"),e("span",{staticClass:"line-number"},[s._v("80")]),e("br"),e("span",{staticClass:"line-number"},[s._v("81")]),e("br"),e("span",{staticClass:"line-number"},[s._v("82")]),e("br"),e("span",{staticClass:"line-number"},[s._v("83")]),e("br")])]),e("hr"),s._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),e("p",[s._v("转载请注明出处！ "),e("a",{attrs:{href:"http://www.cxy.wiki",target:"_blank",rel:"noopener noreferrer"}},[s._v("探索者"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);n.default=t.exports}}]);